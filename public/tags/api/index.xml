<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>api on Nicola Iarocci</title>
    <link>https://nicolaiarocci.com/tags/api/</link>
    <description>Recent content in api on Nicola Iarocci</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>All rights reserved</copyright>
    <lastBuildDate>Thu, 29 Aug 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://nicolaiarocci.com/tags/api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Eve with Python 3.3 Support</title>
      <link>https://nicolaiarocci.com/eve-with-python-3-3-support/</link>
      <pubDate>Thu, 29 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://nicolaiarocci.com/eve-with-python-3-3-support/</guid>
      <description>Another Eve release is out and I&amp;#8217;m particularly proud about it since it brings full Python 3.3 support (among other things). Check out the relevant blog post: Eve 0.0.9 is out!</description>
    </item>
    
    <item>
      <title>Free Robust Email Validation API</title>
      <link>https://nicolaiarocci.com/free-email-validation-api/</link>
      <pubDate>Mon, 29 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://nicolaiarocci.com/free-email-validation-api/</guid>
      <description>The guys at Mailgun are taking a very interesting approach at the ever-lasting problem of proper Email validation:
 Given an arbitrary address this service validates address based off syntax checks (RFC defined grammar), DNS validation, spell checks, and if available, Email ServiceProvider (ESP) specific local-part grammar.
 They&amp;#8217;re relying on formal grammar and not on regex like the rest of us, which is perhaps the more intriguing aspect of the project.</description>
    </item>
    
    <item>
      <title>REST API con MongoDB</title>
      <link>https://nicolaiarocci.com/rest-api-con-mongodb/</link>
      <pubDate>Fri, 26 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://nicolaiarocci.com/rest-api-con-mongodb/</guid>
      <description>Le slide che ho presentato a &amp;#8216;A Morning with MongoDB&amp;#8216; (24 ottobre, Milano) sono disponibili online. Gran parte degli interventi erano di tipo divulgativo ed inizialmente ero preoccupato che i miei contenuti fossero troppo tecnici. In realtà in sala c&amp;#8217;erano davvero tanti programmatori, quindi tutto è andato bene.
A margine dell&amp;#8217;evento molte le domande su Eve, la REST API open source a cui sto lavorando e che conto di rilasciare entro fine anno: bene!</description>
    </item>
    
    <item>
      <title>Sviluppare una RESTful Web API con Python, Flask e MongoDB</title>
      <link>https://nicolaiarocci.com/sviluppare-una-restful-web-api-con-python-flask-e-mongodb/</link>
      <pubDate>Mon, 09 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://nicolaiarocci.com/sviluppare-una-restful-web-api-con-python-flask-e-mongodb/</guid>
      <description>&lt;p&gt;&lt;img class=&#34;alignright size-thumbnail wp-image-4867&#34; style=&#34;border: 0px;&#34; title=&#34;EuroPython 2012&#34; src=&#34;images/europython-logo-150x50.png?fit=150%2C50&#34; alt=&#34;EuroPython 2012&#34; srcset=&#34;http://i2.wp.com/nicolaiarocci.com/wp-content/uploads/europython-logo.png?resize=150%2C50 150w, http://i2.wp.com/nicolaiarocci.com/wp-content/uploads/europython-logo.png?resize=300%2C100 300w, http://i2.wp.com/nicolaiarocci.com/wp-content/uploads/europython-logo.png?w=330 330w&#34; sizes=&#34;(max-width: 150px) 100vw, 150px&#34; data-recalc-dims=&#34;1&#34; /&gt;La scorsa settimana a &lt;a title=&#34;EuroPython 2012&#34; href=&#34;https://ep2012.europython.eu&#34; target=&#34;_blank&#34;&gt;EuroPython 2012&lt;/a&gt; ho tenuto un talk intitolato &lt;a href=&#34;https://ep2012.europython.eu/conference/talks/sviluppare-una-restful-web-api-con-python-flask-e-mongodb&#34; target=&#34;_blank&#34;&gt;Sviluppare una RESTful Web API con Python, Flask e MongoDB&lt;/a&gt;. Mi ha fatto piacere riscontrare forte interesse sia per gli aspetti teorici dell&amp;#8217;architettura REST che per la loro implementazione pratica con strumenti quali Flask e MongoDB. In entrambe le sessioni inglese e italiana mi sono state rivolte molte domande, sia in occasione delle Q&amp;amp;A plenarie che nei successivi colloqui informali. Parecchi anche i commenti ed i suggerimenti, davvero utili ed apprezzati (a quanto pare non sono l&amp;#8217;unico che, forte di un background .NET, ha compiuto o sta per compiere il salto verso Python e il mondo open source).&lt;/p&gt;

&lt;p&gt;Soprattutto ho rilevato una forte curiosità su MongoDB, un database non-relazionale verso il quale sembra prevalere un atteggiamento  di generale timidezza: &amp;#8220;vorrei ma non oso&amp;#8221;, insomma. Per quanto riguarda Flask direi che ormai, nel vasto firmamento dei micro web framework, è una stella che brilla di luce propria.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flask MimeRender nel Python Package Index (PyPI)</title>
      <link>https://nicolaiarocci.com/flask-mimerender-e-nel-python-package-index-pypi/</link>
      <pubDate>Thu, 01 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://nicolaiarocci.com/flask-mimerender-e-nel-python-package-index-pypi/</guid>
      <description>Un appunto veloce per segnalare che Flask MimeRender, il mio strumento RESTful per il rendering basato sul MIME Media-Type delle richieste HTTP (JSON, XML, HTML, ecc.), è ora presente su PyPI, il Python Package Index ufficiale.
 La pagina ufficiale di Flask MimeRender su PyPI  Tutto ciò significa che l&amp;#8217;installazione di Flask MimeRender su Windows, OSX e Linux è diventato più semplice:
pip install flask-mimerender Codice sorgente e istruzioni sono a vostra disposizione su GitHub, mentre per spiegazione approfondita ed esempio d&amp;#8217;uso vi rimando al mio articolo precedente: Una REST API che adatta le sue risposte al MIME Media-Type delle richieste HTTP.</description>
    </item>
    
    <item>
      <title>Il Cloud Computing è davvero affidabile?</title>
      <link>https://nicolaiarocci.com/il-cloud-computing-e-davvero-affidabile/</link>
      <pubDate>Fri, 03 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://nicolaiarocci.com/il-cloud-computing-e-davvero-affidabile/</guid>
      <description>&lt;p&gt;&lt;img class=&#34;alignright size-medium wp-image-2755&#34; title=&#34;Cloud Computing&#34; src=&#34;images/cloud-computing-300x214.jpg?w=200&#34; alt=&#34;Cloud Computing&#34; srcset=&#34;http://i1.wp.com/nicolaiarocci.com/wp-content/uploads/cloud-computing.jpg?resize=300%2C214 300w, http://i1.wp.com/nicolaiarocci.com/wp-content/uploads/cloud-computing.jpg?resize=150%2C107 150w, http://i1.wp.com/nicolaiarocci.com/wp-content/uploads/cloud-computing.jpg?resize=420%2C300 420w, http://i1.wp.com/nicolaiarocci.com/wp-content/uploads/cloud-computing.jpg?w=559 559w&#34; sizes=&#34;(max-width: 300px) 100vw, 300px&#34; data-recalc-dims=&#34;1&#34; /&gt;E&amp;#8217; di pochi giorni fa la &lt;a title=&#34;Spring cleaning for some of our APIs&#34; href=&#34;http://googlecode.blogspot.com/2011/05/spring-cleaning-for-some-of-our-apis.html&#34; target=&#34;_blank&#34;&gt;notizia&lt;/a&gt; che alcuni servizi API gratuiti forniti da Google verranno chiusi. Tra questi spicca &lt;strong&gt;&lt;a title=&#34;Google Translate API&#34; href=&#34;http://code.google.com/intl/it-IT/apis/language/translate/overview.html&#34; target=&#34;_blank&#34;&gt;Translate API&lt;/a&gt;&lt;/strong&gt;, la più apprezzata libreria gratuita per la traduzione automatica sul web. Basta una occhiata ai &lt;a href=&#34;http://googlecode.blogspot.com/2011/05/spring-cleaning-for-some-of-our-apis.html#comments&#34; target=&#34;_blank&#34;&gt;commenti &lt;/a&gt;per rendersi conto dello sconcerto generato dall&amp;#8217;annuncio, per altro del tutto inatteso. Molti si dicono disposti a pagare pur di non rinunciare alla API, ma non è  questa l&amp;#8217;idea di Google che in alternativa propone &lt;a title=&#34;Google Translate Element&#34; href=&#34;http://www.google.com/webelements/#!/translate&#34; target=&#34;_blank&#34;&gt;Google Translate Element&lt;/a&gt;, widget gratuito che certo non è una soluzione accettabile per applicazioni che attualmente integrano la API in maniera trasparente. Immagino che proprio qui stia il nocciolo della questione: una API non è visibile né apprezzabile dall&amp;#8217;esterno, mentre un widget promuove il brand Google.&lt;/p&gt;

&lt;p&gt;Migliaia di aziende, enti pubblici e organizzazioni non governative internazionali che oggi usano la API dovranno trovare soluzioni alternative, probabilmente a pagamento. Almeno gli è stato concesso un po&amp;#8217; di tempo: Google garantisce un periodo di tre anni prima della sospensione del servizio.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-2776&#34; title=&#34;Translate API Deprecata&#34; src=&#34;http://i2.wp.com/nicolaiarocci.com/wp-content/uploads/TranslateAPI.png?fit=480%2C82&#34; alt=&#34;Translate API Deprecata&#34; srcset=&#34;http://i2.wp.com/nicolaiarocci.com/wp-content/uploads/TranslateAPI.png?w=480 480w, http://i2.wp.com/nicolaiarocci.com/wp-content/uploads/TranslateAPI.png?resize=150%2C25 150w, http://i2.wp.com/nicolaiarocci.com/wp-content/uploads/TranslateAPI.png?resize=300%2C51 300w&#34; sizes=&#34;(max-width: 480px) 100vw, 480px&#34; data-recalc-dims=&#34;1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Questa notizia induce ancora una volta alcune riflessioni circa l&amp;#8217;affidabilità del &lt;strong&gt;&lt;a title=&#34;Cloud Computing&#34; href=&#34;http://it.wikipedia.org/wiki/Cloud_computing&#34; target=&#34;_blank&#34;&gt;Cloud Computing&lt;/a&gt;&lt;/strong&gt;, modello di sviluppo verso il quale, volenti o nolenti, tutti noi siamo diretti.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Come accorciare links e URL usando le API di Bit.ly via ASP.NET</title>
      <link>https://nicolaiarocci.com/accorciare-url-usando-bit-ly-via-asp-net/</link>
      <pubDate>Mon, 29 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://nicolaiarocci.com/accorciare-url-usando-bit-ly-via-asp-net/</guid>
      <description>&lt;p&gt;&lt;img class=&#34;alignright size-full wp-image-1152&#34; title=&#34;DotNet Logo&#34; src=&#34;http://i2.wp.com/nicolaiarocci.com/wp-content/uploads/dotnet-logo-new.jpg?fit=221%2C210&#34; alt=&#34;DotNet Logo&#34; srcset=&#34;http://i2.wp.com/nicolaiarocci.com/wp-content/uploads/dotnet-logo-new.jpg?w=221 221w, http://i2.wp.com/nicolaiarocci.com/wp-content/uploads/dotnet-logo-new.jpg?resize=150%2C142 150w&#34; sizes=&#34;(max-width: 221px) 100vw, 221px&#34; data-recalc-dims=&#34;1&#34; /&gt;Una delle applicazioni su cui sto lavorando in questo periodo manda decine di emails al giorno, ognuna contenente almeno un paio di links (URL). Questi link sono molto lunghi perché oltre all&amp;#8217;indirizzo della pagina da aprire contengono una o più &lt;a href=&#34;http://en.wikipedia.org/wiki/Query_string&#34;&gt;query strings&lt;/a&gt;. In generale, per tante buone ragioni, le URL lunghe non sono mai una buona idea; ancor meno lo sono se  devono comparire in un messaggio email. Gli algoritmi di &lt;a href=&#34;http://en.wikipedia.org/wiki/Word_wrap&#34;&gt;word wrapping&lt;/a&gt; dei client di posta elettronica vanno in crisi quando sono costretti a inserire un ritorno di carrello nel bel mezzo della URL. Come biasimarli?&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>